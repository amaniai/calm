{"status":{},"contains_secrets":false,"product_version":"3.1.1","spec":{"description":"GIMP image editing software running on windows.","resources":{"client_attrs":{"555b2ae3_deployment":{"y":383.8666044143,"x":746.9370339559}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"GIMP"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"set_parameters"},{"kind":"app_task","name":"create_connection"},{"kind":"app_task","name":"send_email"}],"name":"20e91b5d_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"set_parameters"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"create_connection"}},{"from_task_reference":{"kind":"app_task","name":"create_connection"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"send_email"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"GIMP"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"set_parameters","attrs":{"exit_status":[],"script":"username = 'user-{}'.format(_construct_random_password(8,numDigits=4, numLetters=4, numPuncs=0, numCaps=0).lower())\npassword = _construct_random_password(10,upper=14, numDigits=4)\nprint('ACCESS_USERNAME={}'.format(username))\nprint('ACCESS_PASSWORD={}'.format(password))\n\ncalm_index = int('@@{calm_array_index}@@')\nemail_list = '''@@{EMAIL_LIST}@@'''\nclean_list = [x for x in email_list.splitlines() if x.strip(' ')]\nif calm_index < len(clean_list):\n    print('EMAIL={}'.format(clean_list[calm_index]))\nelse:\n\tprint('EMAIL={}'.format(clean_list[0]))\n","eval_variables":["ACCESS_USERNAME","ACCESS_PASSWORD"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"GIMP"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"create_connection","attrs":{"exit_status":[],"script":"import requests\n\n# -------------- Test Environment ------------------\n# import urllib3\n# urllib3.disable_warnings()\n\n# base_url = 'https:\/\/lab.ntnx.me\/access\/api\/'\n# api_username = 'guacadmin'\n# api_password = 'NTNX\/4u2020'\n\n# access_username = 'hussain'\n# access_password = 'nutanix\/4u'\n# vm_name = 'Windows DC4'\n# vm_ip = '10.0.0.118'\n# vm_port = '3389'\n# vm_username = 'administrator'\n# vm_password = 'NTNX\/4u2019'\n# remote_app = '||GIMP'\n\n# -------------- Calm Environment ------------------\nbase_url = '@@{ACCESS_URL}@@'\napi_username = '@@{GUACADMIN.username}@@'\napi_password = '@@{GUACADMIN.secret}@@'\n\naccess_username = '@@{ACCESS_USERNAME}@@'\naccess_password = '@@{ACCESS_PASSWORD}@@'\nvm_name = '@@{calm_project_name}@@-@@{calm_application_name}@@-@@{calm_array_index}@@-GIMP'\nvm_ip = '@@{address}@@'\nvm_port = '3389'\nvm_username = 'administrator'\nvm_password = '@@{ADMIN_PASS}@@'\nremote_app = '@@{REMOTE_APP}@@'\n\n\n# Authenticate with username and password to get authentication token\n# ----------------------------------------------------------------------------\nkwargs = {\n    'verify': False,\n    'headers': {'Content-Type': 'application\/x-www-form-urlencoded'}\n}\nauthen_payload = 'username={}&password={}'.format(api_username, api_password)\nurl = base_url + 'tokens'\nresp = requests.post(url, data=authen_payload, **kwargs)\nif resp.status_code == 200:\n    print('INFO - successfully authenticated with Guacamole')\n    auth_token = resp.json()['authToken']\n    data_source = resp.json()['dataSource']\n    kwargs['headers']['Content-Type'] = 'application\/json'\nelse:\n    print('ERROR - authentication failed, status code: {}, msg: {}'.format(resp.status_code, resp.content))\n    exit(1)\n\n# verify if the user already created\nurl = base_url + 'session\/data\/{}\/users?token={}'.format(data_source, auth_token)\nresp = requests.get(url, **kwargs)\nif resp.status_code == 200:\n    print('INFO - user list fetched')\n    if access_username not in resp.json():\n        print('INFO - user not found, creating the user')\n        payload = {'username': access_username, 'password': access_password,'attributes': {}}\n        resp = requests.post(url, json=payload, **kwargs)\n        if resp.status_code == 200:\n            print('INFO - user created successfully...')\n        else:\n            print('ERROR - User creation failed, status code: {}, msg: {}'.format(resp.status_code, resp.content))\nelse:\n    print('ERROR - fetching users failed, status code: {}, msg: {}'.format(resp.status_code, resp.content))\n    exit(1)\n\n\n# Create RDP connection\n# ----------------------------------------------\npayload = {\n    'parentIdentifier': 'ROOT',\n    'name': vm_name,\n    'protocol': 'rdp',\n    'attributes': {},\n    'parameters': {\n        'port': vm_port,\n        'ignore-cert': True,\n        'hostname': vm_ip,\n        'username': vm_username,\n        'password': vm_password,\n        'remote-app': remote_app\n    }\n}\nurl = base_url + 'session\/data\/{}\/connections?token={}'.format(data_source, auth_token)\nresp = requests.post(url, json=payload, **kwargs)\nif resp.status_code == 200:\n    connection_id = resp.json()['identifier']\n    print('INFO - connection created successfully for VM: {}'.format(vm_name))\n    print('INFO - new connection identifier: {}'.format(connection_id))\nelse:\n    print('ERROR - connection creation failed, status code: {}, msg: {}'.format(resp.status_code, resp.content))\n    exit(1)\n\n\n# Update user with connection permission\n# --------------------------------------------------------------------------------\nurl = base_url + 'session\/data\/{}\/users\/{}\/permissions?token={}'.format(data_source, access_username, auth_token)\npayload = [{'op': 'add', 'path': '\/connectionPermissions\/{}'.format(connection_id), 'value': 'READ'}]\nresp = requests.patch(url, json=payload, **kwargs)\nif resp.status_code == 204:\n    print('INFO - connection assigned to user')\nelse:\n    print('ERROR - failed to assign connection to user, status code: {}, msg: {}'.format(resp.status_code, resp.content))\n    exit(1)\n\n# print info\nprint('CONNECTION_ID={}'.format(connection_id))\n\n","eval_variables":["CONNECTION_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"GIMP"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"send_email","attrs":{"script":"import requests\n\nsubject = 'Your access to @@{calm_application_name}@@ is ready ...'\nemail = '@@{EMAIL}@@'\nmessage = '''\n\nDear user[@@{calm_int(calm_array_index) + 1}@@],\n\n@@{calm_username}@@ provisioned an application for you.\n\nTo access your instance, you can login using the following credentials and URL:\n\nURL: @@{PUBLIC_ACCESS_URL}@@\nusername: @@{ACCESS_USERNAME}@@\npassword: @@{ACCESS_PASSWORD}@@\n\nnote: username and password are case-sensitive\n\n\nThank you\n\n'''\n\n\nurl = '@@{MAIL_GW}@@'\npayload = {\n  'to': email,\n  'subject': subject,\n  'body': message\n}\nresp = requests.post(url, json=payload)\nif resp.status_code == 200:\n  print('INFO - message sent to {}'.format(email))\nelse:\n  print('ERROR - message failed, status code: {}, msg: {}'.format(resp.status_code, resp.content))\n  exit(1)\n\n\n\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"14ca5534_runbook","main_task_local_reference":{"kind":"app_task","name":"20e91b5d_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"GIMP"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"delete connections"}],"name":"6653d406_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"GIMP"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"delete connections","attrs":{"script":"import requests\n\n# -------------- Test Environment ------------------\n# import urllib3\n# urllib3.disable_warnings()\n#\n# base_url = 'https:\/\/lab.ntnx.me\/access\/api\/'\n# api_username = 'guacadmin'\n# api_password = 'NTNX\/4u2020'\n#\n# access_username = 'hussain'\n# connection_id = '6'\n\n# -------------- Calm Environment ------------------\nbase_url = '@@{ACCESS_URL}@@'\napi_username = '@@{GUACADMIN.username}@@'\napi_password = '@@{GUACADMIN.secret}@@'\n\naccess_username = '@@{ACCESS_USERNAME}@@'\nconnection_id = '@@{CONNECTION_ID}@@'\n\n\n# Authenticate with username and password to get authentication token\n# ----------------------------------------------------------------------------\nkwargs = {\n    'verify': False,\n    'headers': {'Content-Type': 'application\/x-www-form-urlencoded'}\n}\nauthen_payload = 'username={}&password={}'.format(api_username, api_password)\nurl = base_url + 'tokens'\nresp = requests.post(url, data=authen_payload, **kwargs)\nif resp.status_code == 200:\n    print('INFO - successfully authenticated with Guacamole')\n    auth_token = resp.json()['authToken']\n    data_source = resp.json()['dataSource']\n    kwargs['headers']['Content-Type'] = 'application\/json'\nelse:\n    print('ERROR - authentication failed, status code: {}, msg: {}'.format(resp.status_code, resp.content))\n    exit(1)\n\n# delete the connection\n# ---------------------------------------\nurl = base_url + 'session\/data\/{}\/connections\/{}?token={}'.format(data_source, connection_id, auth_token)\nresp = requests.delete(url)\nif resp.status_code == 204:\n    print('INFO - connection {} deleted successfully'.format(connection_id))\nelse:\n    print('ERROR - connection delete failed, status code: {}, msg: {}'.format(resp.status_code, resp.content))\n    exit(1)\n\n\n# check if user has any other connections\n# ---------------------------------------------------------------------------\nurl = base_url + 'session\/data\/{}\/users\/{}\/permissions?token={}'.format(data_source, access_username, auth_token)\nresp = requests.get(url, json={})\nif len(resp.json().get('connectionPermissions', {})) == 0:\n    print('INFO - User has no more connections, deleting the user account')\n    url = base_url + 'session\/data\/{}\/users\/{}?token={}'.format(data_source, access_username, auth_token)\n    resp = requests.delete(url)\n    if resp.status_code == 204:\n        print('INFO - user {} deleted successfully'.format(access_username))\n    else:\n        print('ERROR - user delete failed, status code: {}, msg: {}'.format(resp.status_code, resp.content))\n        exit(1)\nelse:\n    print('INFO - user {} has still more connections assigned'.format(access_username))\n\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"2e6a6502_runbook","main_task_local_reference":{"kind":"app_task","name":"6653d406_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"GIMP"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"afabdf3c_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"969c576d_runbook","main_task_local_reference":{"kind":"app_task","name":"afabdf3c_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"GIMP"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"7fcdf2ad_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"20ed8b75_runbook","main_task_local_reference":{"kind":"app_task","name":"7fcdf2ad_dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"GIMP"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"f999b48d_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"0751234e_runbook","main_task_local_reference":{"kind":"app_task","name":"f999b48d_dag"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[],"name":"GIMP","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"ACCESS_USERNAME","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"ACCESS_PASSWORD","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"CONNECTION_ID","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"EMAIL","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}],"description":""}],"substrate_definition_list":[{"description":"","action_list":[],"type":"AHV_VM","name":"VM_GIMP","readiness_probe":{"connection_type":"POWERSHELL","retries":"5","connection_protocol":"http","connection_port":5985,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"60","disable_readiness_probe":true},"editables":{"create_spec":{"resources":{"nic_list":{},"serial_port_list":{}}}},"os_type":"Windows","create_spec":{"name":"vm-@@{calm_array_index}@@-@@{calm_time}@@","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"fa8b4999-6b07-4893-a435-2e1b578133dc"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":2,"gpu_list":[],"memory_size_mib":8192,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":null,"type":"","sysprep":{"is_domain":false,"install_type":"PREPARED","domain_credential_reference":null,"domain":"","dns_ip":"","dns_search_path":"","unattend_xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<unattend xmlns=\"urn:schemas-microsoft-com:unattend\">\n   <settings pass=\"specialize\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <ComputerName>GIMP<\/ComputerName>\n         <RegisteredOrganization>Nutanix<\/RegisteredOrganization>\n         <RegisteredOwner>Acropolis<\/RegisteredOwner>\n         <TimeZone>UTC<\/TimeZone>\n      <\/component>\n   <\/settings>\n   <settings pass=\"oobeSystem\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <UserAccounts>\n            <AdministratorPassword>\n               <Value>@@{ADMIN_PASS}@@<\/Value>\n               <PlainText>true<\/PlainText>\n            <\/AdministratorPassword>\n         <\/UserAccounts>\n         <OOBE>\n            <HideEULAPage>true<\/HideEULAPage>\n            <SkipMachineOOBE>true<\/SkipMachineOOBE>\n         <\/OOBE>\n      <\/component>\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-International-Core\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <InputLocale>en-US<\/InputLocale>\n         <SystemLocale>en-US<\/SystemLocale>\n         <UILanguageFallback>en-us<\/UILanguageFallback>\n         <UILanguage>en-US<\/UILanguage>\n         <UserLocale>en-US<\/UserLocale>\n      <\/component>\n   <\/settings>\n<\/unattend>","type":""}},"power_state":"ON","type":"","account_uuid":"e44bcd61-660d-4d46-9a85-e27ba9a5d0c7","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"GIMP-APP","uuid":"24170839-868b-43bb-b537-f7bff039c271"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"categories":""},"variable_list":[]}],"credential_definition_list":[{"username":"guacadmin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"GUACADMIN"}],"package_definition_list":[{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"GIMP"}],"name":"Package1","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"5603bf0d_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"2d201694_runbook","main_task_local_reference":{"kind":"app_task","name":"5603bf0d_dag"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"0e82439f_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"7169d67d_runbook","main_task_local_reference":{"kind":"app_task","name":"0e82439f_dag"},"variable_list":[]}},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"name":"555b2ae3_deployment","min_replicas":"@@{COUNT}@@","default_replicas":"@@{COUNT}@@","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package1"}],"substrate_local_reference":{"kind":"app_substrate","name":"VM_GIMP"},"variable_list":[],"description":""}],"description":"","action_list":[],"name":"Default","variable_list":[{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"SECRET","name":"ADMIN_PASS","value":"","label":"Admin Password","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"ACCESS_URL","value":"http:\/\/10.21.21.122:8080\/guacamole\/api\/","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"REMOTE_APP","value":"||GIMP","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"MAIL_GW","value":"http:\/\/10.21.21.120\/mail\/","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"regex":{"should_validate":true,"value":"^(((\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*(\\r\\n)?\\s?)+)*)$"},"val_type":"MULTILINE_STRING","is_mandatory":true,"description":"Enter each user email address in a separate line (if  requested seats more than emails, the notification will be sent to the first email address)","data_type":"BASE","type":"LOCAL","name":"EMAIL_LIST","value":"","label":"Email Address","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"regex":{"should_validate":false,"value":"^[\\d]*$"},"val_type":"INT","is_mandatory":true,"description":"Number of applications to provision (min 1 and max 10)","data_type":"BASE","type":"LOCAL","name":"COUNT","value":"1","label":"Seat Count","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":["1","2","3","4","5","6","7","8","9","10"]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"PUBLIC_ACCESS_URL","value":"https:\/\/lab.ntnx.me\/access\/","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"GUACADMIN"},"type":"USER"},"name":"GIMP"},"api_version":"3.0","metadata":{"last_update_time":"1607535839798665","kind":"blueprint","spec_version":32,"creation_time":"1607505332148125","name":"GIMP"}}